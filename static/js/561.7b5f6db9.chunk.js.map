{"version":3,"file":"static/js/561.7b5f6db9.chunk.js","mappings":"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","sources":["utils/formikFileldCheck.js","webpack://softryzen-ecosolution/./src/components/ContactForm/contactForm.module.scss?1b47","components/ContactForm/ContactForm.jsx","webpack://softryzen-ecosolution/./src/components/ContactInfo/contactInfo.module.scss?b9b8","components/ContactInfo/ContactInfo.jsx","webpack://softryzen-ecosolution/./src/modules/Contacts/contacts.module.scss?af55","modules/Contacts/Contacts.jsx"],"sourcesContent":["const fieldCheck = values => {\n  const errors = {};\n  switch (true) {\n    case !values.name:\n      errors.name = 'Name is required';\n      break;\n    case values.name.length > 40:\n      errors.name = 'Enter a shorter name';\n      break;\n    case !values.email:\n      errors.email = 'Email is required';\n      break;\n    case !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email):\n      errors.email = 'Wrong Email';\n      break;\n    case !values.phone:\n      errors.phone = 'Phone is required';\n      break;\n    case !/^(380\\d{9})?$/.test(values.phone):\n      errors.phone = 'Wrong phone number';\n      break;\n\n    default:\n      break;\n  }\n  return errors;\n};\n\nexport default fieldCheck;\n","// extracted by mini-css-extract-plugin\nexport default {\"contactForm\":\"contactForm_contactForm__jGZzV\",\"fieldForm\":\"contactForm_fieldForm__gwscJ\",\"fieldForm_fieldBlock\":\"contactForm_fieldForm_fieldBlock__WnRx7\",\"fieldForm_fieldBlock_textarea\":\"contactForm_fieldForm_fieldBlock_textarea__0IycR\",\"fieldForm_fieldBlock_error\":\"contactForm_fieldForm_fieldBlock_error__KdYt+\",\"fieldForm_fieldBlock_textareaCounter\":\"contactForm_fieldForm_fieldBlock_textareaCounter__QGy9L\",\"textArea\":\"contactForm_textArea__Qx3Oc\",\"fieldForm_buttonWrap\":\"contactForm_fieldForm_buttonWrap__f7fyH\",\"BtnSubmit\":\"contactForm_BtnSubmit__pvAfk\",\"BtnSubmit_svgWrapper\":\"contactForm_BtnSubmit_svgWrapper__bqua0\"};","import { nanoid } from 'nanoid';\nimport { Field, Formik, Form } from 'formik';\nimport SvgSelector from 'Svg/SvgSelectors';\n\nimport fieldCheck from 'utils/formikFileldCheck';\n\nimport styles from './contactForm.module.scss';\n\nconst ContactForm = () => {\n  const handlePhoneChange = (e, setFieldValue) => {\n    const value = e.target.value;\n    const onlyPhone = /^\\d*$/;\n    if (onlyPhone.test(value)) {\n      setFieldValue('phone', value);\n    }\n  };\n  const handleSubmit = (values, { resetForm }) => {\n    try {\n      const data = {\n        id: nanoid(),\n        name: values.name,\n        email: values.email,\n        phone: values.phone,\n        text: values.text,\n      };\n      console.log('data', data);\n      resetForm();\n    } catch (error) {\n      console.log(error.message);\n    }\n  };\n\n  return (\n    <div className={styles.contactForm}>\n      <Formik\n        initialValues={{\n          name: '',\n          email: '',\n          phone: '',\n          text: '',\n        }}\n        validate={fieldCheck}\n        onSubmit={handleSubmit}\n      >\n        {({\n          values,\n          errors,\n          touched,\n          handleChange,\n\n          setFieldValue,\n        }) => (\n          <Form className={styles.fieldForm}>\n            <div\n              style={{\n                borderColor: errors.name && touched.name ? '#D28B8B' : '',\n              }}\n              className={styles.fieldForm_fieldBlock}\n            >\n              <label htmlFor=\"name\">* Full name:</label>\n              <Field\n                type=\"text\"\n                name=\"name\"\n                id=\"name\"\n                value={values.name}\n                placeholder=\"John Rosie\"\n                maxLength={50}\n              />\n              {errors.name && touched.name && (\n                <div className={styles.fieldForm_fieldBlock_error}>\n                  {errors.name}\n                </div>\n              )}\n            </div>\n            <div\n              style={{\n                borderColor: errors.email && touched.email ? '#D28B8B' : '',\n              }}\n              className={styles.fieldForm_fieldBlock}\n            >\n              <label htmlFor=\"email\">* E-mail:</label>\n              <Field\n                type=\"text\"\n                name=\"email\"\n                id=\"email\"\n                value={values.email}\n                placeholder=\"johnrosie@gmail.com\"\n              />\n              {errors.email && touched.email && (\n                <div className={styles.fieldForm_fieldBlock_error}>\n                  {errors.email}\n                </div>\n              )}\n            </div>\n            <div\n              style={{\n                borderColor: errors.phone && touched.phone ? '#D28B8B' : '',\n              }}\n              className={styles.fieldForm_fieldBlock}\n            >\n              <label htmlFor=\"phone\">* Phone:</label>\n              <Field\n                type=\"phone\"\n                name=\"phone\"\n                id=\"phone\"\n                value={values.phone}\n                onChange={e => handlePhoneChange(e, setFieldValue)}\n                placeholder=\"380961234567\"\n                maxLength={12}\n              />\n              {errors.phone && touched.phone && (\n                <div className={styles.fieldForm_fieldBlock_error}>\n                  {errors.phone}\n                </div>\n              )}\n            </div>\n            <div\n              className={`${styles.fieldForm_fieldBlock} ${styles.textArea}`}\n            >\n              <label htmlFor=\"text\">Message:</label>\n              <Field\n                className={styles.fieldForm_fieldBlock_textarea}\n                as=\"textarea\"\n                rows=\"3\"\n                name=\"text\"\n                id=\"text\"\n                onChange={handleChange}\n                value={values.text}\n                placeholder=\"Your message\"\n                maxLength={200}\n              />\n              <span\n                style={{\n                  color: values.text.length === 200 ? '#D28B8B' : '',\n                }}\n                className={styles.fieldForm_fieldBlock_textareaCounter}\n              >\n                {values.text.length}/200\n              </span>\n            </div>\n            <div className={styles.fieldForm_buttonWrap}>\n              <button className={styles.BtnSubmit} type=\"button\">\n                Send\n                <div className={styles.BtnSubmit_svgWrapper}>\n                  <SvgSelector id=\"arrow\" />\n                </div>\n              </button>\n            </div>\n          </Form>\n        )}\n      </Formik>\n    </div>\n  );\n};\n\nexport default ContactForm;\n","// extracted by mini-css-extract-plugin\nexport default {\"contactsWraper\":\"contactInfo_contactsWraper__pRAQn\",\"contactsItem__name\":\"contactInfo_contactsItem__name__OOQUy\",\"contactsItem__info\":\"contactInfo_contactsItem__info__-gmve\",\"contactsItem__svg\":\"contactInfo_contactsItem__svg__kUVQN\",\"contactsItem__bodyTel\":\"contactInfo_contactsItem__bodyTel__xBob+\",\"contactsSocial\":\"contactInfo_contactsSocial__bdFCK\"};","import SvgSelector from 'Svg/SvgSelectors';\nimport Social from 'components/Social/Social';\n\nimport styles from './contactInfo.module.scss';\n\nconst ContactInfo = () => {\n  return (\n    <ul className={styles.contactsWraper}>\n      <li className={styles.contactsItem}>\n        <p className={styles.contactsItem__name}>Phone:</p>\n        <div className={styles.contactsItem__bodyTel}>\n          <a href=\"tel:+380981234567\" className={styles.contactsItem__info}>\n            <SvgSelector id=\"call\" style={styles.contactsItem__svg} /> 38 (098)\n            12 34 567\n          </a>\n          <a href=\"tel:+380931234567\" className={styles.contactsItem__info}>\n            <SvgSelector id=\"call\" style={styles.contactsItem__svg} /> 38 (093)\n            12 34 567\n          </a>\n        </div>\n      </li>\n      <li className={styles.contactsItem}>\n        <p className={styles.contactsItem__name}>E-mail:</p>\n        <a\n          href=\"mailto:office@ecosolution.com\"\n          className={styles.contactsItem__info}\n        >\n          <SvgSelector id=\"mail\" style={styles.contactsItem__svg} />{' '}\n          office@ecosolution.com\n        </a>\n      </li>\n      <li className={styles.contactsItem}>\n        <p className={styles.contactsItem__name}>Address:</p>\n        <p className={styles.contactsItem__info}>\n          <SvgSelector id=\"address\" style={styles.contactsItem__svg} /> 79005,\n          Ukraine, Lvivstreet. Shota Rustaveli, 7\n        </p>\n      </li>\n      <li className={styles.contactsItem}>\n        <p className={styles.contactsItem__name}>Social Networks:</p>\n        <Social color={styles.contactsSocial} length=\"32\" />\n      </li>\n    </ul>\n  );\n};\nexport default ContactInfo;\n","// extracted by mini-css-extract-plugin\nexport default {\"containerContacts\":\"contacts_containerContacts__achc+\",\"contactsTitle\":\"contacts_contactsTitle__5jC9F\",\"contactsWraper\":\"contacts_contactsWraper__qBMxt\"};","import ContactForm from 'components/ContactForm/ContactForm';\nimport ContactInfo from 'components/ContactInfo/ContactInfo';\nimport { Element } from 'react-scroll';\nimport styles from './contacts.module.scss';\n\nconst Contacts = () => {\n  return (\n    <Element name=\"Contact Us\" className={styles.containerContacts}>\n      <h2 className={styles.contactsTitle}>Contact us</h2>\n\n      <div className={styles.contactsWraper}>\n        <ContactInfo />\n        <ContactForm />\n      </div>\n    </Element>\n  );\n};\n\nexport default Contacts;\n"],"names":["values","errors","name","length","email","test","phone","_jsx","className","styles","children","Formik","initialValues","text","validate","fieldCheck","onSubmit","_ref","resetForm","data","id","nanoid","console","log","error","message","_ref2","touched","handleChange","setFieldValue","_jsxs","Form","style","borderColor","htmlFor","Field","type","value","placeholder","maxLength","onChange","e","target","handlePhoneChange","concat","as","rows","color","SvgSelector","href","Social","Element","ContactInfo","ContactForm"],"sourceRoot":""}